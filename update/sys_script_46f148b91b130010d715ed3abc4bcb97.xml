<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="task">u_supplier_numberVALCHANGES^sys_class_name=incident^ORsys_class_name=change_request^ORsys_class_name=sc_request^ORsys_class_name=problem^EQ<item endquery="false" field="u_supplier_number" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item display_value="Incident" endquery="false" field="sys_class_name" goto="false" newquery="false" operator="=" or="false" value="incident"/>
            <item display_value="Change Request" endquery="false" field="sys_class_name" goto="false" newquery="false" operator="=" or="true" value="change_request"/>
            <item display_value="Request" endquery="false" field="sys_class_name" goto="false" newquery="false" operator="=" or="true" value="sc_request"/>
            <item display_value="Problem" endquery="false" field="sys_class_name" goto="false" newquery="false" operator="=" or="true" value="problem"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>PushPreviousNotes_Attachments</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add code for finding all the work notes present in the ticket previously and push it as a single work notes to the supplier.
	var elementValue = '';
			var checkSupplierNumber = new GlideRecord('task');
			checkSupplierNumber.addQuery('sys_id', current.element_id);
			checkSupplierNumber.query();
			if(checkSupplierNumber.next())
				{
					if(checkSupplierNumber.u_supplier_number != '')
						{
							number = checkSupplierNumber.number;
							supplierNumber = checkSupplierNumber.u_supplier_number;
							
							if(current.name == 'incident')
							{
								entity = 'incident';
								ticketType = 'Incident';
							}
							
							if(current.name == 'sc_request')
							{
								entity = 'request';
								ticketType = 'ServiceRequest';
							}	
							
							if(current.name == 'problem')
							{
								entity = 'problem';
								ticketType = 'Problem';
							}
							
							if(current.name == 'change_request')
							{
								entity = 'change';
								ticketType = 'Change';
							}	
							
							
							//Now prepare the json payload and create a new record in the Transaction manager table.
							var newTXNRecord = new GlideRecord('x_105558_sia_adapt_transaction_manager');      
	
							newTXNRecord.initialize();                                                                          // initialization of the object.

							var jsonPayload = {};

							newTXNRecord.setValue('entity',ticketType);
							newTXNRecord.setValue('operation','WorkNotes');
							newTXNRecord.setValue('direction', 'Outbound');
							newTXNRecord.setValue('transaction_status', 'New');
							newTXNRecord.setValue('ticket_number', current.element_id);

							jsonPayload.CorrelationID = number+"";

							newTXNRecord.setValue('nnitid', supplierNumber);
							jsonPayload.NNITID = supplierNumber+"";

							jsonPayload.EntityType = entity+"";

							jsonPayload.ViewAccess = 'external'+"";
														
							

							jsonPayload.Note = current.work_notes.getJournalEntry(-1).toString().trim();

							var jsonObject = new global.JSON();
							var str = jsonObject.encode(jsonPayload);

							// the code for creating a JSON Payload ends here.

							newTXNRecord.setValue('payload', str.toString().trim());

							//Now, insert the values into the table.
							newTXNRecord.insert();

						}
				}	
	
	

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>ajvkumar</sys_created_by>
        <sys_created_on>2020-03-02 11:05:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>46f148b91b130010d715ed3abc4bcb97</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>PushPreviousNotes_Attachments</sys_name>
        <sys_overrides/>
        <sys_package display_value="SIA-Adapter" source="x_105558_sia_adapt">c1ff409b1b710010d715ed3abc4bcb47</sys_package>
        <sys_policy/>
        <sys_scope display_value="SIA-Adapter">c1ff409b1b710010d715ed3abc4bcb47</sys_scope>
        <sys_update_name>sys_script_46f148b91b130010d715ed3abc4bcb97</sys_update_name>
        <sys_updated_by>ajvkumar</sys_updated_by>
        <sys_updated_on>2020-03-02 11:53:37</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=46f148b91b130010d715ed3abc4bcb97"/>
</record_update>
